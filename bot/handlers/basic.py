from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from bot.keyboards import main_menu_keyboard, gender_keyboard
from bot.states import RegistrationStates
from database.connection import db

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await state.clear()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    user_profile = await db.get_user_profile(message.from_user.id)
    
    if not user_profile:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        await db.create_user_profile(
            user_id=message.from_user.id,
            username=message.from_user.username
        )
        
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –±–æ—Ç–∞-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞!\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∫ –∫–∞–∫–æ–º—É –≤—Ä–∞—á—É-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É –Ω—É–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö —Å–∏–º–ø—Ç–æ–º–æ–≤.\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ –¥–∞–≤–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω–∏–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –¥–∞—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.\n\n"
            "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç (–≤ –≥–æ–¥–∞—Ö):",
            reply_markup=gender_keyboard()
        )
        await state.set_state(RegistrationStates.waiting_for_age)
    else:
        # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        await message.answer(
            f"–†–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞!\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=main_menu_keyboard()
        )


@router.message(Command("help"))
@router.message(F.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
ü§ñ <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>

1Ô∏è‚É£ <b>–ù–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</b>
–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ —Å–∏–º–ø—Ç–æ–º—ã —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. –Ø –∑–∞–¥–∞–º —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É—é –Ω—É–∂–Ω–æ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.

2Ô∏è‚É£ <b>–ú–æ–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</b>
–ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π.

3Ô∏è‚É£ <b>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–∏—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–≤–æ–∑—Ä–∞—Å—Ç, –ø–æ–ª, —Ä–æ—Å—Ç, –≤–µ—Å).

<b>‚ö†Ô∏è –í–ê–ñ–ù–û:</b>
‚Ä¢ –ë–æ—Ç –ù–ï –∑–∞–º–µ–Ω—è–µ—Ç –≤–∏–∑–∏—Ç –∫ –≤—Ä–∞—á—É
‚Ä¢ –≠—Ç–æ —Ç–æ–ª—å–∫–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è, –∫—É–¥–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è
‚Ä¢ –ü—Ä–∏ —Å–µ—Ä—å—ë–∑–Ω—ã—Ö —Å–∏–º–ø—Ç–æ–º–∞—Ö –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–∫–æ—Ä—É—é –ø–æ–º–æ—â—å

<b>–ö–æ–º–∞–Ω–¥—ã:</b>
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ
"""
    await message.answer(help_text, parse_mode="HTML")


@router.message(Command("cancel"))
@router.message(F.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
async def cmd_cancel(message: Message, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è"""
    current_state = await state.get_state()
    
    if current_state is None:
        await message.answer(
            "–ù–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å ü§∑‚Äç‚ôÇÔ∏è",
            reply_markup=main_menu_keyboard()
        )
        return
    
    await state.clear()
    await message.answer(
        "‚úÖ –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –í–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        reply_markup=main_menu_keyboard()
    )
