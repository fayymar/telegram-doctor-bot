from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from bot.keyboards import main_menu_keyboard, gender_keyboard, skip_keyboard
from bot.states import RegistrationStates
from database.connection import db

router = Router()


# === –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è ===

@router.message(RegistrationStates.waiting_for_age)
async def process_age(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞"""
    try:
        age = int(message.text)
        if age < 1 or age > 120:
            await message.answer("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –æ—Ç 1 –¥–æ 120 –ª–µ—Ç:")
            return
        
        await db.update_user_profile(message.from_user.id, age=age)
        await message.answer(
            "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª:",
            reply_markup=gender_keyboard()
        )
        await state.set_state(RegistrationStates.waiting_for_gender)
        
    except ValueError:
        await message.answer("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 25)")


@router.message(RegistrationStates.waiting_for_gender)
async def process_gender(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª–∞"""
    text = message.text.lower()
    
    if "–º—É–∂—Å–∫–æ–π" in text or "–º—É–∂" in text:
        gender = "male"
    elif "–∂–µ–Ω—Å–∫–∏–π" in text or "–∂–µ–Ω" in text:
        gender = "female"
    elif "–¥—Ä—É–≥–æ–π" in text or "–¥—Ä—É–≥" in text:
        gender = "other"
    else:
        await message.answer(
            "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏:",
            reply_markup=gender_keyboard()
        )
        return
    
    await db.update_user_profile(message.from_user.id, gender=gender)
    await message.answer(
        "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: 175):",
        reply_markup=skip_keyboard()
    )
    await state.set_state(RegistrationStates.waiting_for_height)


@router.message(RegistrationStates.waiting_for_height, F.text == "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
async def skip_height(message: Message, state: FSMContext):
    """–ü—Ä–æ–ø—É—Å–∫ —Ä–æ—Å—Ç–∞"""
    await message.answer(
        "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–µ—Å –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: 70):",
        reply_markup=skip_keyboard()
    )
    await state.set_state(RegistrationStates.waiting_for_weight)


@router.message(RegistrationStates.waiting_for_height)
async def process_height(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–æ—Å—Ç–∞"""
    try:
        height = int(message.text)
        if height < 50 or height > 250:
            await message.answer("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–æ—Å—Ç –æ—Ç 50 –¥–æ 250 —Å–º:")
            return
        
        await db.update_user_profile(message.from_user.id, height=height)
        await message.answer(
            "–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–µ—Å –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: 70):",
            reply_markup=skip_keyboard()
        )
        await state.set_state(RegistrationStates.waiting_for_weight)
        
    except ValueError:
        await message.answer("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ä–æ—Å—Ç —á–∏—Å–ª–æ–º –≤ —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: 175)")


@router.message(RegistrationStates.waiting_for_weight, F.text == "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
async def skip_weight(message: Message, state: FSMContext):
    """–ü—Ä–æ–ø—É—Å–∫ –≤–µ—Å–∞"""
    await state.clear()
    await message.answer(
        "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –æ–ø–∏—Å–∞–≤ —Å–≤–æ–∏ —Å–∏–º–ø—Ç–æ–º—ã.",
        reply_markup=main_menu_keyboard()
    )


@router.message(RegistrationStates.waiting_for_weight)
async def process_weight(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–µ—Å–∞"""
    try:
        weight = float(message.text.replace(',', '.'))
        if weight < 20 or weight > 300:
            await message.answer("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–µ—Å –æ—Ç 20 –¥–æ 300 –∫–≥:")
            return
        
        await db.update_user_profile(message.from_user.id, weight=weight)
        await state.clear()
        await message.answer(
            "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –æ–ø–∏—Å–∞–≤ —Å–≤–æ–∏ —Å–∏–º–ø—Ç–æ–º—ã.",
            reply_markup=main_menu_keyboard()
        )
        
    except ValueError:
        await message.answer("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–µ—Å —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 70 –∏–ª–∏ 65.5)")


# === –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è ===

@router.message(F.text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def view_profile(message: Message):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è"""
    profile = await db.get_user_profile(message.from_user.id)
    
    if not profile:
        await message.answer("‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
        return
    
    gender_map = {
        "male": "–ú—É–∂—Å–∫–æ–π",
        "female": "–ñ–µ–Ω—Å–∫–∏–π",
        "other": "–î—Ä—É–≥–æ–π"
    }
    
    profile_text = "üë§ <b>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\n"
    
    if profile.get("age"):
        profile_text += f"üìÖ –í–æ–∑—Ä–∞—Å—Ç: {profile['age']} –ª–µ—Ç\n"
    if profile.get("gender"):
        profile_text += f"‚öß –ü–æ–ª: {gender_map.get(profile['gender'], '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
    if profile.get("height"):
        profile_text += f"üìè –†–æ—Å—Ç: {profile['height']} —Å–º\n"
    if profile.get("weight"):
        profile_text += f"‚öñÔ∏è –í–µ—Å: {profile['weight']} –∫–≥\n"
    
    profile_text += "\n<i>–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start</i>"
    
    await message.answer(profile_text, parse_mode="HTML")
